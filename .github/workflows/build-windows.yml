# 工作流名称
name: Build Serial-Studio for Windows

# 工作流的触发条件
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-windows:
    # 直接指定运行环境为最新的 Windows Server
    runs-on: windows-latest

    steps:
      # 第一步：检出代码
      - name: Checkout repository
        uses: actions/checkout@v4

      # 第二步：安装 Qt 环境（包含 Graphs 组件）
      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: '6.9.1'
          host: 'windows'
          target: 'desktop'
          arch: 'win64_msvc2019_64'
          cache: 'true'

      # 设置 Qt 环境变量，参考 deploy.yml
      - name: Set Qt Environment Variables
        shell: pwsh
        run: |
          $QT_OUTPUT_DIR = "${{ github.workspace }}\Qt-${{ env.QT_VERSION }}-${{ runner.os }}-x64"
          $QT_BIN_PATH = "$QT_OUTPUT_DIR\${{ env.QT_VERSION }}\msvc2019_64\bin"
          $QT_LIBEXEC_PATH = "$QT_OUTPUT_DIR\${{ env.QT_VERSION }}\msvc2019_64\libexec"
          $CMAKE_PREFIX_PATH = "$QT_OUTPUT_DIR\${{ env.QT_VERSION }}\msvc2019_64\lib\cmake"
          Add-Content -Path $env:GITHUB_ENV -Value "QT_OUTPUT_DIR=$QT_OUTPUT_DIR"
          Add-Content -Path $env:GITHUB_ENV -Value "QT_BIN_PATH=$QT_BIN_PATH"
          Add-Content -Path $env:GITHUB_ENV -Value "QT_LIBEXEC_PATH=$QT_LIBEXEC_PATH"
          Add-Content -Path $env:GITHUB_ENV -Value "CMAKE_PREFIX_PATH=$CMAKE_PREFIX_PATH"

      # 第四步：配置 CMake，参考 deploy.yml 的路径变量
      - name: Configure CMake
        env:
          CMAKE_PREFIX_PATH: ${{ env.CMAKE_PREFIX_PATH }}
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -G "Ninja"

      # 第五步：执行编译
      - name: Build with CMake
        run: |
          cd build
          cmake --build . --config Release

      # 第六步：上传编译产物
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: serial-studio-windows
          path: |
            build/bin/Release/Serial-Studio.exe
            build/bin/Release/*.dll